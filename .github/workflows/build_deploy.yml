name: Build and Publish Package & Push Git Tag

on:
  workflow_dispatch:
    inputs:
      bump_version:
        type: choice
        description: 'Bump version'
        required: true
        default: 'patch'
        options:
          - 'patch'
          - 'minor'
          - 'major'

jobs:
  build-publish-pkg-push-tag:
    name: Build and Publish Package & Push Git Tag
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:

      - name: Show envs
        run: env
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: snok/install-poetry@v1

      - name: Build and Publish to PYPI
        env:
          POETRY_REQUESTS_TIMEOUT: 60
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
        run: |
          poetry version ${{ inputs.bump_version }}
          poetry build
          poetry publish --skip-existing

      - name: Push bump commit and Create Pull Request
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_V=v$(poetry version --short)
          BRANCH_NAME=release/$RELEASE_V

          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          git checkout -B $BRANCH_NAME
          git add pyproject.toml
          git commit -m "Bump version to $RELEASE_V from workflow"
          git push -u origin $BRANCH_NAME
          git tag $RELEASE_V
          git push origin $RELEASE_V

          gh pr create -B 'main' -H $BRANCH_NAME \
            --title "Bump version to $RELEASE_V" \
            --body "Created by Github action"

          echo "RELEASE_V=$RELEASE_V" >> $GITHUB_ENV

      - uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          prerelease: false
          tag: ${{ env.RELEASE_V }}

  build-docs:
    name: Buld Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: snok/install-poetry@v1

      - name: Build docs
        run: |
          poetry install
          # cd docs
          # poetry run make html
          # touch ./build/html/.nojekyll
          echo "Foo build docs"

      # - name: Push docs to gh-pages
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     folder: docs/build/html # The folder the action should deploy.

